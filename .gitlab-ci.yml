# Global image of node
image: node:alpine

# 4 stages
stages:
    - install
    - test
    - build
    - deploy

# Anchor YML (hide)
# TO DO if push on main branch
.rules: &rules
    only:
        refs:
            - main

# cache features
cache:
    key: node_modules
    paths:
        - node_modules/

# 1st job INSTALL
fo-install:
    stage: install
    <<: *rules
    script:
        - npm install
        - ls -la

# 2nd job TEST
fo-test:
    stage: test
    <<: *rules
    dependencies:
        - fo-install
    script:
        - echo maybe later

# 3rd job BUILD
fo-build:
    stage: build
    <<: *rules
    dependencies:
        - fo-test
    script:
        - npm run build
    artifacts:
        name: 'run-build'
        expire_in: 1 week
        paths:
            - .next

#before_script:
#    - apt-get update -qq
#    - apt-get install -qq git
#    # Setup SSH deploy keys
#    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
#    - eval $(ssh-agent -s)
#    - ssh-add <(echo "$SSH_PRIVATE_KEY")
#    - mkdir -p ~/.ssh
#    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

# 4th job DEPLOY
fo-deploy:
    stage: deploy
    <<: *rules
    dependencies:
        - fo-build
    script:
        - ls -la
        - apt-get update -qq
        - apt-get install -qq git
        # Setup SSH deploy keys
        - 'which ssh-agent || ( apt-get install -qq openssh-client )'
        - eval $(ssh-agent -s)
        - ssh-add <(echo "$SSH_PRIVATE_KEY")
        - mkdir -p ~/.ssh
        - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
        - ssh root@diag-plus.tk "cd var/www/fo-diag-plus && git switch main && git pull origin main && exit"

